---
import PostPreview from "@/components/blog/PostPreview.astro";
import { getAllPosts, sortMDByDate } from "@/data/post";
import PageLayout from "@/layouts/Base.astro";
import Faqs from "@/components/Faqs.astro";
import Testimonials from '../components/Testimonials.astro';
import Feature from "@/components/Feature.astro";
import Bio from "@/components/Bio.astro";
import { getEntry } from 'astro:content';
import keystaticConfig from '../../keystatic.config';
import { createReader } from '@keystatic/core/reader';


import InfoBlock from "@/components/InfoBlock.astro";


import PhotoSection from "@/components/PhotoGallery.astro"
const siteSettings = await getEntry('siteSettings', 'main');
const pwaSettings = await getEntry('pwaSettings', 'index');
const { defaultView, MAX_POSTS } = siteSettings.data;
const homeContent = await getEntry('homepage', 'index');
import App from '@/components/checkout.html';
const reader = createReader(process.cwd(), keystaticConfig);


const homepage = await reader.singletons.home.read();


const showBioOnHome = homepage?.showBioOnHome ?? false;
const showFaqOnHome = homepage?.showFaqOnHome ?? false;
const showTestOnHome = homepage?.showTestOnHome ?? false;
const showFeature = homepage?.showFeature ?? false;
const showPosts = homepage?.showPosts ?? false;
const ShowMore = homepage?.showMore ?? false;
const ShowApp = homepage?.showApp ?? false;


const showHomeGallery = homepage?.showHomeGallery ?? false;

const allPosts = await getAllPosts();
const allPostsByDate = sortMDByDate(allPosts).slice(0, MAX_POSTS);
const language = await getEntry('language', 'index');


const sections = [
  { name: 'feature', show: homepage?.showFeature, order: homepage?.featureOrder, component: Feature },
  { name: 'bio', show: homepage?.showBioOnHome, order: homepage?.bioOrder, component: Bio },
  { name: 'app', show: homepage?.showApp, order: homepage?.appOrder, component: App },
  { name: 'gallery', show: homepage?.showHomeGallery, order: homepage?.galleryOrder, component: PhotoSection },
  { name: 'posts', show: homepage?.showPosts, order: homepage?.postsOrder, component: showPosts },
  { name: 'faq', show: homepage?.showFaqOnHome, order: homepage?.faqOrder, component: Faqs },
  { name: 'testimonials', show: homepage?.showTestOnHome, order: homepage?.testimonialsOrder, component: Testimonials },
];

const sortedSections = sections
  .filter(section => section.show)
  .sort((a, b) => (a.order ?? 0) - (b.order ?? 0));
---
<style>
	.scroll-snap-container {
flex-direction: column;
  height: 100vh;
  max-width:100vw;
  overflow-x: hidden;
  overflow-y: scroll;
  scroll-snap-type: y mandatory;
}
.scroll-snap-container > * {
  scroll-snap-align: start;
  /* height: 100%; */
  /* align-items: center;
  align-content: center; */
}
</style>
<PageLayout meta={{ title: homeContent.data.title, description: pwaSettings.data.description }}>
	<div class="scroll-snap-container flex flex-col">
		{sortedSections.map(section => (
			<section style="padding-bottom: 10vh;">
				{(() => {
					switch (section.name) {
						case 'feature':
							return <Feature content={homeContent.data} />;
						case 'bio':
							return <Bio />;
						case 'app':
							return <App />;
						case 'gallery':
							return <PhotoSection />;
						case 'posts':
							return (
								<>
									<h2 class="glow text-[clamp(1.4rem,3.9vw,4rem)] shadow-text text-center theme-accent backdrop-blur-lg">{homeContent.data.postsectiontitle}</h2>
									<div class={`contentpanel ${defaultView === 'swipe' ? 'slider panels horizontal-slider' : 'grid-container'}`}>
										{allPostsByDate.map((p) => <PostPreview post={p} withDesc />)}
										{ShowMore && (
											<a class="viewmore no-underline text-white text-center block" href="/posts/" style="padding:1vh 1rem; margin:0 50px 50px 50px;">
												{language.data.viewmore}
											</a>
										)}
									</div>
								</>
							);
						case 'faq':
							return (
								<>
									<h2 class="glow text-[clamp(1.4rem,3.9vw,4rem)] shadow-text text-center theme-accent backdrop-blur-lg">{homeContent.data.testimonialtitle}</h2>
									<Faqs />
								</>
							);
						case 'testimonials':
							return <Testimonials />;
						default:
							return null;
					}
				})()}
			</section>
		))}
	</div>
</PageLayout>
